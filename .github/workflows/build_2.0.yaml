name: Build and Release Void Linux Packages

env:
  TAG: workflow-${{ github.run_number }}
  SHA: ${{ github.sha }}

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - srcpkgs/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    name: Create the source
    runs-on: ubuntu-latest
    steps:
    - name: Checkout void-packages
      uses: actions/checkout@v4
      with:
        repository: void-linux/void-packages
        ref: master

    - name: Merge this repository into void-linux/void-packages
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global --add safe.directory "*"
        git remote add -f sofijacom https://github.com/sofijacom/void-package.git
        git merge --no-commit --strategy-option=theirs --allow-unrelated-histories -Xignore-space-change sofijacom/main
        mkdir -p hostdir/binpkgs
        gh release download --pattern "*${ARCH}*" --dir hostdir/binpkgs --repo sofijacom/void-package || true
        if [ "$ARCH" = x86_64 ]; then
          rm --force hostdir/binpkgs/*x86_64-musl*
        fi
        rm --force hostdir/binpkgs/*.xbps.sig2
        find -mindepth 1 -maxdepth 1 -exec tar cpzf source.tgz {} \+

    - name: Upload source
      uses: actions/upload-artifact@v4
      with:
        path: source.tgz
        retention-days: 1
        # include-hidden-files: true

  init:
    needs:
      - prepare
    name: Figure out what needs to be built
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find-packages.outputs.matrix }}
    container:
      image: ghcr.io/void-linux/void-glibc-full:20250901R1
      options: --platform linux/amd64
      env:
        ARCH: x86_64
        XBPS_TARGET_ARCH: x86_64
        REPO_OWNER: "${{ github.repository_owner }}"
        REPO_NAME: "${{ github.event.repository.name }}"
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - name: Prep container
        run: |
          mkdir -p /etc/xbps.d && cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
          xbps-install -Syu xbps && xbps-install -yu && xbps-install -y bash curl git github-cli tar jq sudo
          # create non-root user
          useradd -G xbuilder -M builder

      - name: Download source
        uses: actions/download-artifact@v4

      - name: unpack
        run: |
          tar xzf artifact/source.tgz -C .
          rm -rf artifact

      - name: Identify changes to build
        id: find-packages
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config --global --add safe.directory /__w/void-package/void-package
          latest_name=$(echo "Initial Commit")
          latest_sha=$(git rev-list --max-count=1 ${latest_name} 2>/dev/null || git rev-list --max-parents=0 sofijacom/main)
          echo "Latest Tag Name: ${latest_name}"
          echo "Latest Tag SHA: ${latest_sha}"

          chown -R builder:builder .

          git diff-tree -r --no-renames --name-only --diff-filter=AM ${latest_sha} ${SHA} -- 'srcpkgs/**' \
          | cut -d/ -f 2 | uniq | xargs sudo -Eu builder ./xbps-src sort-dependencies | jq -R | jq -cs | tee /tmp/templates.json
          echo "matrix=$(cat /tmp/templates.json)" >> $GITHUB_OUTPUT

  build:
    name: Build packages
    runs-on: ubuntu-latest
    needs:
      - init
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        packages: ${{ fromJson(needs.init.outputs.matrix) }}
        arch: [x86_64, x86_64-musl]
        include:
          - arch: x86_64
            libc: glibc
          - arch: x86_64-musl
            libc: musl
    container:
      image: ghcr.io/void-linux/void-${{ matrix.libc }}-full:20250901R1
      options: --platform linux/amd64 --privileged
      volumes:
        - /dev:/dev
      env:
        ARCH: '${{ matrix.arch }}'
        XBPS_TARGET_ARCH: ${{ matrix.arch }}
        REPO_OWNER: "${{ github.repository_owner }}"
        REPO_NAME: "${{ github.event.repository.name }}"
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - name: Prep container
        run: |
          mkdir -p /etc/xbps.d && cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
          xbps-install -Syu xbps && xbps-install -yu && xbps-install -y sudo bash curl git github-cli
          useradd -G xbuilder -M builder -s $(which bash)
