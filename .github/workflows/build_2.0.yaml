name: Build and Release Void Linux Packages

env:
  # TAG: workflow-${{ github.run_number }}
  TAG: build-${{ github.run_number }}-${{ github.sha }}
  SHA: ${{ github.sha }}

on:
  workflow_dispatch:
    inputs:
      force_package:
        description: "Force rebuild of a specific package (optional)"
        required: false
        default: ""
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - srcpkgs/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: void-linux/void-packages
        ref: master

    - name: Merge this repository into void-linux/void-packages
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global --add safe.directory "*"
        git remote add -f sofijacom https://github.com/sofijacom/void-package.git
        git merge --no-commit --strategy-option=theirs --allow-unrelated-histories -Xignore-space-change sofijacom/main
        mkdir -p hostdir/binpkgs
        # gh release download --pattern "*${ARCH}*" --dir hostdir/binpkgs --repo sofijacom/void-package || true
        find -mindepth 1 -maxdepth 1 -exec tar cpzf source.tgz {} \+

    - uses: actions/upload-artifact@v4
      with:
        name: source
        path: source.tgz
        retention-days: 1
        # include-hidden-files: true

  init:
    needs: prepare
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find-packages.outputs.matrix }}
    container:
      image: ghcr.io/void-linux/void-glibc-full:20250901R1
      options: --platform linux/amd64
      env:
        ARCH: x86_64
        XBPS_TARGET_ARCH: x86_64
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Prep container
        run: |
          mkdir -p /etc/xbps.d && cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
          xbps-install -Syu xbps && xbps-install -yu && xbps-install -y bash curl git github-cli tar jq sudo
          useradd -G xbuilder -M builder -s $(which bash)

      - uses: actions/download-artifact@v4
        with:
          name: source

      - run: tar xzf source.tgz

      - id: find-packages
        # env:
        #   GH_TOKEN: ${{ github.token }}
        run: |
          git config --global --add safe.directory /__w/void-package/void-package
          latest_sha=$(git rev-list --max-parents=0 HEAD)
          change=$(git diff-tree -r --no-renames --name-only --diff-filter=AM ${latest_sha} ${SHA} -- 'srcpkgs/**' | cut -d/ -f2 | uniq )

          if [ -n "${{ github.event.inputs.force_package }}" ]; then
            change="$change ${{ github.event.inputs.force_package }}"
          fi

          chown -R builder:builder .

          echo "${change}" | sudo -Eu builder xargs ./xbps-src sort-dependencies | jq -R | jq -cs | tee /tmp/matrix.json

          echo "matrix=$(cat /tmp/matrix.json)" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: init
    # permissions:
    #   contents: write
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.init.outputs.matrix) }}
        arch:
          - x86_64
          # - x86_64-musl
        include:
          - arch: x86_64
            libc: glibc
          # - arch: x86_64-musl
          #   libc: musl
    container:
      image: ghcr.io/void-linux/void-${{ matrix.libc }}-full:20250901R1
      options: --platform linux/amd64 --privileged
      volumes:
        - /dev:/dev
      env:
        ARCH: ${{ matrix.arch }}
        XBPS_TARGET_ARCH: ${{ matrix.arch }}
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - name: Prep container
        run: |
          mkdir -p /etc/xbps.d && cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
          xbps-install -Syu xbps && xbps-install -yu && xbps-install -y sudo bash git tar
          useradd -G xbuilder -M builder -s $(which bash)

      - uses: actions/download-artifact@v4
        with:
          name: source

      - run: tar xzf source.tgz

      - name: Cache masterdir
        uses: actions/cache@v4
        with:
          path: masterdir-${{ matrix.arch }}
          key: masterdir-${{ matrix.package }}-${{ matrix.arch }}-${{ github.sha }}
          restore-keys: |
            masterdir-${{ matrix.arch }}-

      - name: Cache binpkgs
        uses: actions/cache@v4
        with:
          path: hostdir/binpkgs
          key: binpkgs-${{ matrix.package }}-${{ matrix.arch }}-${{ github.sha }}
          restore-keys: |
            binpkgs-${{ matrix.arch }}-

      - name: Setup void-packages
        run: |
          chown -R builder:builder .
          echo XBPS_BUILD_ENVIRONMENT=ci >> etc/conf
          echo XBPS_ALLOW_RESTRICTED=yes >> etc/conf
          echo XBPS_CHROOT_CMD=uchroot >> etc/conf

          if [ ! -d masterdir-${{ matrix.arch }} ]; then
            yes | sudo -Eu builder ./xbps-src -m masterdir-${{ matrix.arch }} -A ${{ matrix.arch }} binary-bootstrap
          fi

      # -------------------- Packages to build --------------------

      - id: build-package
        run: |
          set -e
          sudo -Eu builder ./xbps-src pkg -j$(nproc) -m masterdir-${{ matrix.arch }} -A ${{ matrix.arch }} "${{ matrix.package }}"
          pkgfile=$(ls hostdir/binpkgs/${{ matrix.package }}-*.xbps | head -n1 )
          echo "pkg=$(basename $pkgfile)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: void-${{ matrix.package }}
          path: ./hostdir/binpkgs/${{ steps.build-package.outputs.pkg }}

      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.package }}
          path: ./builddir/.xbps-src*log

      # -----------------------------------------------------------

  newrelease:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: ghcr.io/void-linux/void-glibc-full:20250901R1
      options: --platform linux/amd64
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Prep container
        run: |
          mkdir -p /etc/xbps.d && cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
          xbps-install -Syu xbps && xbps-install -yu && xbps-install -y sudo bash git tar
          useradd -G xbuilder -M builder -s $(which bash)
      - uses: actions/download-artifact@v4
        with:
          path: repo
          pattern: void-*

      - name: Clean & sign
        working-directory: ./repo
        env:
          PRIVKEY: ${{ secrets.PRIV_KEY }}
          XBPS_PASSPHRASE: ${{ secrets.SIGN_PASS }}
        run: |
          xbps-rindex --remove-obsoletes ${PWD}
          printf "%s\n" "${PRIVKEY}" > key.pem
          xbps-rindex --privkey key.pem --sign --signedby "${{ github.repository }}-github-actions" --verbose ${PWD}
          xbps-rindex --privkey key.pem --sign-pkg --verbose ${PWD}/*.xbps
          rm -f key.pem
          xbps-rindex --clean ${PWD}

      - name: checksum
        working-directory: ./repo
        run: |
          rm -rf *.sha256sum *.sha512sum
          for file in *.xbps; do
            sha256sum "${file}" | cut -d ' ' -f1 > "${file}.sha256sum"
            sha512sum "${file}" | cut -d ' ' -f1 > "${file}.sha512sum"
          done

      - uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: "Build ${{ github.sha }}"
          tag_name: ${{ env.TAG }}
          files: repo/*
